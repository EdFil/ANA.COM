<?xml version="1.0" encoding="UTF-8"?>
<project name="anacom" default="compile" basedir=".">
	<description>Anacom with JBoss web services</description>

	<!-- Read environment properties first -->
	<property environment="env" />
	<!-- Override default property values with an external properties file, 
		if present, with the user's machine specific configuration. -->

	<property name="application.name" value="${ant.project.name}" />
	<property name="javac.encoding" value="UTF-8" />
	<property name="java.file.encoding" value="UTF-8" />

	<!-- Main directories -->
	<property name="src.rel-dir" value="src/main" />
	<property name="test.src.rel-dir" value="src/test" />
	<property name="build.rel-dir" value="build" />
	<property name="lib.rel-dir" value="../lib" />
	<property name="dist.rel-dir" value="build" />
	<property name="eclipse.build.rel-dir" value="bin" />
	<property name="tmp.rel-dir" value="/tmp" />

	<property name="project.name" value="anacom" />

	<!-- Directories with the source, e.g. java, dml, webapps -->
	<property name="java.src.rel-dir" value="${src.rel-dir}/java" />
	<property name="java.test.src.rel-dir" value="src/test/java" />
	<property name="dml.src.rel-dir" value="${src.rel-dir}/dml" />
	<property name="config.src.rel-dir" value="${src.rel-dir}/config" />
	<property name="webps.src.rel-dir" value="${src.rel-dir}/webps" />
	<property name="webas.src.rel-dir" value="${src.rel-dir}/webas" />

	<!-- JBoss references -->
	<!-- <property name="jboss.home" value="${env.JBOSS_HOME}" /> -->
	<property name="jboss.temp.rel-dir" value="${tmp.rel-dir}" />
	<property name="db.rel-dir" value="${tmp.rel-dir}/db" />
	<property name="db-93.rel-dir" value="${tmp.rel-dir}/db93" />
	<property name="db-96.rel-dir" value="${tmp.rel-dir}/db96" />
	<property name="db-91.rel-dir" value="${tmp.rel-dir}/db91" />
	<property name="db-ca.rel-dir" value="${tmp.rel-dir}/dbpolicia" />
	<property name="test-db.rel-dir" value="test-db" />

	<!-- WSDL References -->
	<property name="project.localwsdl" value="${webas.src.rel-dir}/${application.name}.wsdl" />
	<property name="stubs.server.package" value="pt.ist.anacom.shared.stubs.server" />
	<property name="stubs.client.package" value="pt.ist.anacom.shared.stubs.client" />
	<property name="binding.file" value="${config.src.rel-dir}/binding.xml" />

	<property name="stubs-ca.package" value="pt.ist.ca.shared.stubs" />
	<property name="ca.localwsdl" value="${webas.src.rel-dir}/ca.wsdl" />

	<!-- DML files -->
	<property name="dml.filename" value="${application.name}.dml" />
	<property name="dml.rel-file-anacom" value="${dml.src.rel-dir}/${dml.filename}" />
	<property name="dml.rel-file-ca" value="${dml.src.rel-dir}/ca.dml" />

	<!-- Directories with generated source -->
	<property name="generated-src.build.rel-dir" value="${build.rel-dir}/src" />

	<!-- Directories with the .class, .e.g used to build the wars -->
	<property name="classes.build.rel-dir" value="${build.rel-dir}/war/WEB-INF/classes" />

	<!-- War distribution -->
	<property name="war-es.target.rel-dir" value="${build.rel-dir}/war-es" />
	<property name="war-es.filename" value="${application.name}-es.war" />

	<property name="dist.rel-dir" value="dist" />
	<property name="dist.as.warfile" value="${dist.rel-dir}/${application.name}-as.war" />
	<property name="dist.ps.warfile" value="${dist.rel-dir}/${application.name}-ps.war" />

	<property name="dist.as.warfile-ca" value="${dist.rel-dir}/ca-as.war" />

	<!-- Keys -->
	<property name="properties-file" value="build.properties" />
	<property file="${user.home}/${properties-file}" />
	<!-- Then read the default configuration properties -->
	<property file="${properties-file}" />
	<property name="keys.rel-dir" value="${tmp.rel-dir}/keys" />
	<property name="keys-anacom.rel-dir" value="${keys.rel-dir}/anacom" />
	<property name="keys-ca.rel-dir" value="${keys.rel-dir}/ca" />

	<!-- Deploy directories -->
	<property name="deploy.dir" value="${jboss.home}/standalone/deployments" />

	<!-- GWT SDK -->
	<!-- property name="gwt.sdk.home" at build.properties -->
	<!-- <property name="gwt.sdk.home" value="/home/alex/eclipse/plugins/com.google.gwt.eclipse.sdkbundle_2.4.0.v201203300216-rel-r37/gwt-2.4.0" 
		/> -->
	<property name="gwt.war.rel-dir" value="${build.rel-dir}/war" />
	<property name="gwt.war.classes.rel-dir" value="${gwt.war.rel-dir}/WEB-INF/classes" />
	<property name="gwt.war.lib.rel-dir" value="${gwt.war.rel-dir}/WEB-INF/lib" />
	<!-- Arguments to gwtc and devmode targets -->
	<property name="gwt.args" value="" />

	<path id="project.classpath">
		<pathelement location="${classes.build.rel-dir}" />
		<fileset dir="${gwt.sdk.home}">
			<include name="**/*.jar" />
		</fileset>
		<!-- SD -->
		<fileset dir="${jboss.home}/modules">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${lib.rel-dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="ws-stubs.classpath">
		<pathelement location="${classes.build.rel-dir}" />
		<!-- SD -->
		<fileset dir="${jboss.home}/modules">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${lib.rel-dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<taskdef resource="pt/ist/fenixframework/dml-ant.xml" classpathref="project.classpath" />

	<target name="prepare">
		<echo message="Preparing the project for build..." />
		<mkdir dir="${classes.build.rel-dir}" />
		<mkdir dir="${db.rel-dir}" />
		<mkdir dir="${test-db.rel-dir}" />
		<mkdir dir="${keys.rel-dir}" />
		<mkdir dir="${keys-anacom.rel-dir}" />
		<mkdir dir="${keys-ca.rel-dir}" />
		<copy todir="${classes.build.rel-dir}">
			<fileset dir="${config.src.rel-dir}">
				<include name="**/**" />
			</fileset>
		</copy>
		<copy file="${dml.rel-file-anacom}" todir="${jboss.temp.rel-dir}" />
		<copy file="${dml.rel-file-ca}" todir="${jboss.temp.rel-dir}" />
		<copy todir="${gwt.war.rel-dir}">
			<fileset dir="." includes="**/*.dml" />
		</copy>
	</target>

	<target name="generate-domain" depends="prepare">
		<echo message="Generating base domain classes..." />
		<echo message="Using: ${dml.src.rel-dir}" />
		<dml-domain-generator destDirectory="${java.src.rel-dir}" destDirectoryBase="${generated-src.build.rel-dir}">
			<fileset dir="${dml.src.rel-dir}">
				<include name="*.dml" />
			</fileset>
		</dml-domain-generator>
	</target>

	<target name="compile-domain" depends="generate-domain, generate-ws-stubs">
		<echo message="Compiling sources..." />
		<javac destdir="${classes.build.rel-dir}" debug="true" debuglevel="lines,vars,source" optimize="true" deprecation="true" verbose="false" includeantruntime="false">
			<classpath refid="project.classpath" />
			<src>
				<pathelement path="${generated-src.build.rel-dir}:${java.src.rel-dir}" />
			</src>
			<compilerarg line="" />
		</javac>
	</target>

	<target name="instrument-classes" depends="">
		<echo message="Injecting FenixFramework Voodoo Magic..." />
		<dml-post-processor dir="${classes.build.rel-dir}">
			<fileset file="${dml.rel-file-anacom}" />
			<fileset file="${dml.rel-file-ca}" />
			<classpath refid="project.classpath" />
		</dml-post-processor>
	</target>

	<target name="compile" depends="compile-domain, instrument-classes" description="Compiles the project">
		<copy todir="${gwt.war.rel-dir}">
			<fileset dir="${webps.src.rel-dir}" />
		</copy>
		<copy todir="${gwt.war.lib.rel-dir}">
			<fileset dir="${lib.rel-dir}" />
		</copy>
		<copy todir="${gwt.war.lib.rel-dir}" flatten="yes">
			<fileset dir="${gwt.sdk.home}" includes="gwt-servlet.jar" />
		</copy>
	</target>

	<target name="compile-tests" depends="compile" description="Compile the tests">
		<javac destdir="${classes.build.rel-dir}" debug="true" debuglevel="lines,vars,source" optimize="true" deprecation="true" verbose="false" includeantruntime="false" encoding="${javac.encoding}">
			<classpath refid="project.classpath" />
			<src>
				<pathelement path="${java.test.src.rel-dir}" />
			</src>
		</javac>
	</target>

	<!-- SD -->
	<target name="generate-ws-stubs" depends="prepare" description="Generate Web Service Java code from local WSDL, for the server">
		<taskdef name="wsconsume" classname="org.jboss.ws.tools.ant.WSConsumeTask">
			<classpath>
				<path refid="ws-stubs.classpath" />
			</classpath>
		</taskdef>

		<echo message="Executing wsconsume to generate server-side code..." />
		<echo message="WSDL: ${project.localwsdl}" />
		<wsconsume fork="false" verbose="true" destdir="${classes.build.rel-dir}" sourcedestdir="${generated-src.build.rel-dir}" package="${stubs-ca.package}" keep="true" wsdl="${ca.localwsdl}" />
		<wsconsume fork="false" verbose="true" destdir="${classes.build.rel-dir}" sourcedestdir="${generated-src.build.rel-dir}" package="${stubs.server.package}" keep="true" wsdl="${project.localwsdl}" />
		<wsconsume fork="false" verbose="true" destdir="${classes.build.rel-dir}" sourcedestdir="${generated-src.build.rel-dir}" package="${stubs.client.package}" keep="true" wsdl="${project.localwsdl}" binding="${binding.file}" />
	</target>

	<target name="copy-web-xml" depends="" description="copy web.xml to its location">
		<copy overwrite="true" tofile="${webas.src.rel-dir}/WEB-INF/web.xml" file="${webas.src.rel-dir}/WEB-INF/${project.name}.xml" />
	</target>

	<target name="copyhandlers" depends="" description="Copy xml soapargs[0] +  handlers files">
		<copy todir="${classes.build.rel-dir}/pt/ist/anacom/applicationserver">
			<fileset dir="${java.src.rel-dir}/pt/ist/anacom/applicationserver">
				<include name="*.xml" />
			</fileset>
		</copy>
		<copy todir="${classes.build.rel-dir}/pt/ist/ca/applicationserver">
			<fileset dir="${java.src.rel-dir}/pt/ist/ca/applicationserver">
				<include name="*.xml" />
			</fileset>
		</copy>
	</target>

	<!-- Application Server -->
	<target name="war-as-sd" depends="copy-web-xml, copyhandlers" description="Create the web service distribution archive">
		<war warfile="${dist.rel-dir}/${project.name}.war" webxml="${webas.src.rel-dir}/WEB-INF/web.xml">
			<classes dir="${classes.build.rel-dir}" />
			<tarfileset dir="${webas.src.rel-dir}">
				<include name="*.wsdl" />
			</tarfileset>
			<tarfileset dir="${config.src.rel-dir}" prefix="WEB-INF/classes">
				<include name="**.properties" />
				<include name="**.xml" />
			</tarfileset>
			<tarfileset dir="${config.src.rel-dir}" prefix="WEB-INF/config">
				<include name="**.properties" />
				<include name="**.xml" />
			</tarfileset>
			<tarfileset dir="./" prefix="WEB-INF/config">
				<include name="build.properties" />
			</tarfileset>
			<tarfileset dir="${lib.rel-dir}" prefix="WEB-INF/lib">
				<include name="**.jar" />
			</tarfileset>
			<tarfileset dir="${keys.rel-dir}" prefix="WEB-INF/keys">
				<include name="*.txt" />
			</tarfileset>
		</war>
	</target>

	<!-- Deploy Application Server -->
	<target name="deploy-as-sd" depends="war-as-sd" description="Deploy web service to JBoss AS">
		<fail unless="jboss.home">project.jboss.home not set</fail>
		<copy todir="${deploy.dir}" file="${dist.rel-dir}/${project.name}.war" />
	</target>

	<target name="deploy-init" depends="clean-all, compile" description="Init Deploy">
	</target>

	<target name="deploy-93-1" depends="generate-93-1-keys" description="Deploy 93">
		<antcall target="deploy-as-sd">
			<param name="project.name" value="93-1" />
		</antcall>
	</target>

	<target name="deploy-96-1" depends="generate-96-1-keys" description="Deploy 96">
		<antcall target="deploy-as-sd">
			<param name="project.name" value="96-1" />
		</antcall>
	</target>

	<target name="deploy-91" depends="deploy-91-1,deploy-91-2,deploy-91-3,deploy-91-4" description="Deploy all 91">
	</target>

	<target name="deploy-91-1" depends="generate-91-1-keys" description="Deploy 91-1">
		<antcall target="deploy-as-sd">
			<param name="project.name" value="91-1" />
		</antcall>
	</target>

	<target name="deploy-91-2" depends="generate-91-2-keys" description="Deploy 91-2">
		<antcall target="deploy-as-sd">
			<param name="project.name" value="91-2" />
		</antcall>
	</target>

	<target name="deploy-91-3" depends="generate-91-3-keys" description="Deploy 91-3">
		<antcall target="deploy-as-sd">
			<param name="project.name" value="91-3" />
		</antcall>
	</target>

	<target name="deploy-91-4" depends="generate-91-4-keys" description="Deploy 91-4">
		<antcall target="deploy-as-sd">
			<param name="project.name" value="91-4" />
		</antcall>
	</target>

	<target name="deploy-ca" depends="generate-CA-keys">
		<antcall target="deploy-as-sd">
			<param name="project.name" value="ca" />
		</antcall>
	</target>

	<target name="deploy-all" depends="deploy-init, deploy-ca, deploy-93-1, deploy-96-1, deploy-91" description="Deploy all web services">
	</target>

	<!-- Un-Deploy Application Server -->
	<target name="undeploy-91" description="Undeploy from JBoss AS">
		<fail unless="jboss.home">project.jboss.home not set</fail>
		<delete file="${deploy.dir}/91-1.war" />
		<delete file="${deploy.dir}/91-2.war" />
		<delete file="${deploy.dir}/91-3.war" />
		<delete file="${deploy.dir}/91-4.war" />
		<delete file="${keys-anacom.rel-dir}91-1public.txt" />
		<delete file="${keys-anacom.rel-dir}91-1private.txt" />
		<delete file="${keys-anacom.rel-dir}91-2public.txt" />
		<delete file="${keys-anacom.rel-dir}91-2private.txt" />
		<delete file="${keys-anacom.rel-dir}91-3public.txt" />
		<delete file="${keys-anacom.rel-dir}91-3private.txt" />
		<delete file="${keys-anacom.rel-dir}91-4public.txt" />
		<delete file="${keys-anacom.rel-dir}91-4private.txt" />
	</target>
	<target name="undeploy-93-1" description="Undeploy from JBoss AS">
		<fail unless="jboss.home">project.jboss.home not set</fail>
		<delete file="${deploy.dir}/93-1.war" />
		<delete file="${keys-anacom.rel-dir}/93-1public.txt" />
		<delete file="${keys-anacom.rel-dir}/93-1private.txt" />
	</target>
	<target name="undeploy-96-1" description="Undeploy from JBoss AS">
		<fail unless="jboss.home">project.jboss.home not set</fail>
		<delete file="${deploy.dir}/96-1.war" />
		<delete file="${keys-anacom.rel-dir}96-1public.txt" />
		<delete file="${keys-anacom.rel-dir}96-1private.txt" />
	</target>

	<target name="undeploy-ca" description="Undeploy from JBoss AS">
		<fail unless="jboss.home">project.jboss.home not set</fail>
		<delete file="${deploy.dir}/ca.war" />
		<delete file="${keys-ca.rel-dir}CApublic.txt" />
		<delete file="${keys-ca.rel-dir}CAprivate.txt" />
	</target>

	<target name="undeploy-all" depends="undeploy-91, undeploy-93-1, undeploy-96-1,undeploy-ca" description="Undeploy all from JBoss AS">
		<fail unless="jboss.home">project.jbss.home not set</fail>
	</target>

	<target name="test-es" depends="compile-tests" description="Run the tests">
		<echo message="Testing all services..." />
		<junit>
			<classpath refid="project.classpath" />
			<formatter type="brief" usefile="false" />
			<test name="pt.ist.anacom.service.test.CancelRegisteredPhoneServiceTest" />
			<test name="pt.ist.anacom.service.test.CreateOperatorServiceTest" />
			<test name="pt.ist.anacom.service.test.CreatePhoneServiceTest" />
			<test name="pt.ist.anacom.service.test.EndVoiceCallServiceTest" />
			<test name="pt.ist.anacom.service.test.GetBalanceAndPhoneListServiceTest" />
			<test name="pt.ist.anacom.service.test.GetBalanceServiceTest" />
			<test name="pt.ist.anacom.service.test.GetLastMadeCommunicationInfoServiceTest" />
			<test name="pt.ist.anacom.service.test.GetPhoneReceivedSMSListServiceTest" />
			<test name="pt.ist.anacom.service.test.GetPhoneStateServiceTest" />
			<test name="pt.ist.anacom.service.test.IncreasePhoneBalanceServiceTest" />
			<test name="pt.ist.anacom.service.test.SendSMSServiceTest" />
			<test name="pt.ist.anacom.service.test.StartVoiceCallServiceTest" />
			<test name="pt.ist.anacom.service.test.SetPhoneStateServiceTest" />
		</junit>
	</target>

	<target name="test-sd" depends="compile-tests" description="Run the tests">
		<echo message="Testing all services..." />
		<junit>
			<classpath refid="project.classpath" />
			<sysproperty key="mock" value="true" />
			<formatter type="brief" usefile="false" />
			<test name="pt.ist.anacom.service.mock.GetBalanceServiceDistTest" />
		</junit>
	</target>


	<target name="clean-all" depends="clean-src, clean-db" description="Cleans the compiled classes and generated sources">
	</target>

	<target name="clean-src" description="Cleans the compiled classes and generated sources">
		<delete dir="${build.rel-dir}" />
		<delete dir="${eclipse.build.rel-dir}" />
		<delete dir="${dist.rel-dir}" />
		<delete dir="${dml.jboss.rel-file}" />
		<delete dir="${keys.rel-dir}" />
	</target>

	<target name="clean-db" description="Cleans the compiled classes and generated sources">
		<delete dir="${test-db.rel-dir}" />
		<delete dir="${db.rel-dir}" />
		<delete dir="${db-93.rel-dir}" />
		<delete dir="${db-96.rel-dir}" />
		<delete dir="${db-91.rel-dir}" />
		<delete dir="${db-ca.rel-dir}" />
	</target>

	<target name="run-ca" depends="" description="Runs the program with a remote application server">
		<java classname="pt.ist.ca.server.CAServer" fork="true">
			<classpath>
				<path refid="project.classpath" />
			</classpath>
		</java>
	</target>

	<target name="run-remote" depends="" description="Runs the program with a remote application server">
		<java classname="pt.ist.anacom.presentationserver.PresentationServer" fork="false">
			<classpath>
				<path refid="project.classpath" />
			</classpath>
			<sysproperty key="server.type" value="ES+SD" />
		</java>
	</target>

	<target name="run-local" depends="compile" description="Runs the program with a local application server">
		<java classname="pt.ist.anacom.presentationserver.PresentationServer" fork="false">
			<classpath>
				<path refid="project.classpath" />
			</classpath>
			<sysproperty key="server.type" value="ES-only" />
		</java>
	</target>

	<target name="gwtc" depends="compile" description="GWT compile to JavaScript (production mode)">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<pathelement location="${java.src.rel-dir}" />
				<path refid="project.classpath" />
			</classpath>
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="-Xmx256M" />
			<arg line="-war" />
			<arg value="${gwt.war.rel-dir}" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg line="${gwt.args}" />
			<arg value="pt.ist.anacom.presentationserver.Anacom" />
		</java>
	</target>

	<target name="gwt-devmode" depends="compile">
			<echo message="Running GWT in devmode with URL='${startUpURL}'" />
			<mkdir dir="${gwt.war.classes.rel-dir}" />
			<copy todir="${gwt.war.classes.rel-dir}">
				<fileset dir="${classes.build.rel-dir}" includes="**/*.class" />
			</copy>
			<copy todir="${gwt.war.classes.rel-dir}">
				<fileset dir="${java.src.rel-dir}" excludes="**/*.java" />
			</copy>
			<copy todir="${gwt.war.classes.rel-dir}" file="${config.src.rel-dir}/log4j.properties" />
			<copy todir="${gwt.war.lib.rel-dir}" flatten="yes">
				<fileset dir="${jboss.home}" includes="**/cxf-*.jar" />
			</copy>
			<java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
				<classpath>
					<path refid="project.classpath" />
					<pathelement location="${java.src.rel-dir}" />
				</classpath>
				<jvmarg value="-Xmx256M" />
				<arg value="-startupUrl" />
				<arg value="${startUpURL}" />
				<arg line="-war" />
				<arg value="${gwt.war.rel-dir}" />
				<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
				<arg line="${gwt.args}" />
				<arg value="pt.ist.anacom.presentationserver.Anacom" />
			</java>
		</target>

	<target name="devmode-es" description="Runs GWT in development mode with Software Engineering configuration">
		<antcall target="gwt-devmode">
			<param name="startUpURL" value="index.html" />
		</antcall>
	</target>

	<target name="devmode-sd" description="Runs GWT in development mode with Distributed Systems configuration">
		<antcall target="gwt-devmode">
			<param name="startUpURL" value="remote.html" />
		</antcall>
	</target>

	<target name="print-env-vars" description="Prints all environment variables">
		<propertyset id="environment">
			<propertyref prefix="env." />
		</propertyset>
		<property name="env_prop" refid="environment" />
		<echo>${env_prop}</echo>
	</target>

	<!-- Generate Keys on all targets -->
	<target name="generate-all-keys" depends="generate-CA-keys, generate-91-1-keys, generate-91-2-keys, generate-91-3-keys, generate-91-4-keys, generate-93-1-keys, generate-96-1-keys" description="Deploy all web services">
	</target>

	<target name="generate-CA-keys" depends="">
		<java classname="pt.ist.ca.shared.security.GenerateKeys">
			<arg line="CA" />
			<classpath>
				<pathelement path="${build.classes.rel-dir}" />
				<path refid="project.classpath" />
			</classpath>
		</java>
	</target>

	<target name="generate-anacom-keys" depends="" description="Generate Keys">
		<java classname="pt.ist.anacom.shared.security.GenerateKeys">
			<arg line="${project.name}" />
			<classpath>
				<pathelement path="${build.classes.rel-dir}" />
				<path refid="project.classpath" />
			</classpath>
		</java>
	</target>

	<target name="generate-91-1-keys" depends="">
		<antcall target="generate-anacom-keys">
			<param name="project.name" value="91-1" />
		</antcall>
	</target>

	<target name="generate-91-2-keys" depends="">
		<antcall target="generate-anacom-keys">
			<param name="project.name" value="91-2" />
		</antcall>
	</target>

	<target name="generate-91-3-keys" depends="">
		<antcall target="generate-anacom-keys">
			<param name="project.name" value="91-3" />
		</antcall>
	</target>

	<target name="generate-91-4-keys" depends="">
		<antcall target="generate-anacom-keys">
			<param name="project.name" value="91-4" />
		</antcall>
	</target>

	<target name="generate-93-1-keys" depends="">
		<antcall target="generate-anacom-keys">
			<param name="project.name" value="93-1" />
		</antcall>
	</target>

	<target name="generate-96-1-keys" depends="">
		<antcall target="generate-anacom-keys">
			<param name="project.name" value="96-1" />
		</antcall>
	</target>

</project>
